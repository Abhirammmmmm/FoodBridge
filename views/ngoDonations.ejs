<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Donations - FoodBridge</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .donation-card {
            transition: transform 0.2s;
        }
        .donation-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        .badge-available {
            background-color: #28a745;
            color: white;
        }
        .badge-accepted {
            background-color: #007bff;
            color: white;
        }
        .badge-completed {
            background-color: #6c757d;
            color: white;
        }
        .nav-pills .nav-link.active {
            background-color: #28a745;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container py-5">
        <h1 class="text-center mb-4">Food Donations Dashboard</h1>
        
        <ul class="nav nav-pills mb-4 justify-content-center" id="donationTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="available-tab" data-bs-toggle="pill" data-bs-target="#available" type="button">
                    Available Donations
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="accepted-tab" data-bs-toggle="pill" data-bs-target="#accepted" type="button">
                    Accepted Donations
                </button>
            </li>
        </ul>
        
        <div class="tab-content" id="donationTabsContent">
            <!-- Available Donations Tab -->
            <div class="tab-pane fade show active" id="available" role="tabpanel">
                <% if (typeof availableDonations !== 'undefined' && availableDonations.length > 0) { %>
                    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                        <% availableDonations.forEach(donation => { %>
                            <div class="col">
                                <div class="card h-100 donation-card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h5 class="card-title"><%= donation.foodItem %></h5>
                                            <span class="badge badge-available">Available</span>
                                        </div>
                                        <ul class="list-unstyled">
                                            <li><strong>Quantity:</strong> <%= donation.quantity %></li>
                                            <li><strong>Location:</strong> <%= donation.address %></li>
                                            <li><strong>Contact:</strong> <%= donation.phone %></li>
                                            <li><strong>Posted:</strong> <%= new Date(donation.createdAt).toLocaleDateString() %></li>
                                        </ul>
                                        <button 
                                            class="btn btn-primary w-100 accept-btn"
                                            data-donation-id="<%= donation._id %>"
                                            onclick="acceptDonation(this)">
                                            Accept Donation
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="text-center">
                        <h3>No available food donations at the moment</h3>
                        <p>Please check back later for new donations</p>
                    </div>
                <% } %>
            </div>

            <!-- Accepted Donations Tab -->
            <div class="tab-pane fade" id="accepted" role="tabpanel">
                <% if (typeof acceptedDonations !== 'undefined' && acceptedDonations.length > 0) { %>
                    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                        <% acceptedDonations.forEach(donation => { %>
                            <div class="col">
                                <div class="card h-100 donation-card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h5 class="card-title"><%= donation.foodItem %></h5>
                                            <span class="badge badge-accepted">Accepted</span>
                                        </div>
                                        <ul class="list-unstyled">
                                            <li><strong>Quantity:</strong> <%= donation.quantity %></li>
                                            <li><strong>Location:</strong> <%= donation.address %></li>
                                            <li><strong>Contact:</strong> <%= donation.phone %></li>
                                            <li><strong>Accepted On:</strong> <%= new Date(donation.acceptedAt).toLocaleDateString() %></li>
                                            <li><strong>Expected Completion:</strong> <%= new Date(donation.expectedCompletionDate).toLocaleDateString() %></li>
                                            <% const timeLeft = Math.ceil((new Date(donation.expectedCompletionDate) - new Date()) / (1000 * 60 * 60 * 24)) %>
                                            <li class="mt-2">
                                                <span class="text-<%= timeLeft <= 1 ? 'danger' : timeLeft <= 2 ? 'warning' : 'success' %>">
                                                    <strong>Time Left:</strong> <%= timeLeft %> day<%= timeLeft !== 1 ? 's' : '' %>
                                                </span>
                                            </li>
                                        </ul>
                                        <button 
                                            class="btn btn-success w-100 complete-btn"
                                            data-donation-id="<%= donation._id %>"
                                            onclick="completeDonation(this)">
                                            Mark as Completed
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="text-center">
                        <h3>No accepted donations</h3>
                        <p>Accept some donations to see them here</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function acceptDonation(button) {
            const donationId = button.getAttribute('data-donation-id');
            button.disabled = true;
            button.innerText = 'Accepting...';

            try {
                const response = await fetch('/accept-donation', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ donationId })
                });

                if (response.ok) {
                    // Donation accepted successfully
                    button.innerText = 'Accepted!';
                    button.classList.replace('btn-primary', 'btn-success');
                    setTimeout(() => {
                        location.reload(); // Reload to update both tabs
                    }, 1000);
                } else {
                    const error = await response.json();
                    alert(error.message || 'Failed to accept donation');
                    button.disabled = false;
                    button.innerText = 'Accept Donation';
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to accept donation. Please try again.');
                button.disabled = false;
                button.innerText = 'Accept Donation';
            }
        }

        async function completeDonation(button) {
            const donationId = button.getAttribute('data-donation-id');
            button.disabled = true;
            button.innerText = 'Completing...';

            try {
                const response = await fetch('/complete-donation', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ donationId })
                });

                if (response.ok) {
                    button.innerText = 'Completed!';
                    button.classList.replace('btn-success', 'btn-secondary');
                    setTimeout(() => {
                        location.reload(); // Reload to update the list
                    }, 1000);
                } else {
                    const error = await response.json();
                    alert(error.message || 'Failed to complete donation');
                    button.disabled = false;
                    button.innerText = 'Mark as Completed';
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to complete donation. Please try again.');
                button.disabled = false;
                button.innerText = 'Mark as Completed';
            }
        }

        // Check for expired donations every minute
        setInterval(() => {
            const now = new Date();
            document.querySelectorAll('.accepted-donation').forEach(card => {
                const completionDate = new Date(card.dataset.completionDate);
                if (now > completionDate) {
                    location.reload();
                }
            });
        }, 60000);
    </script>
</body>
</html>